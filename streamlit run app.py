# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SIzRHChsa6Z8DFTYCUHMGJuq89PEJ7km
"""
import pandas as pd
import random
import os
import streamlit as st

# Input CSV file with all names
#input_file = "Book1.csv"
input_file = "Book1_GujText.csv"

# Output CSV file to store picked names
picked_file = "picked_names.csv"

# Load all names
df = pd.read_csv(input_file)
names = df["Name"].tolist()

# Load already picked names if file exists
if os.path.exists(picked_file):
    picked_df = pd.read_csv(picked_file)
    picked_names = picked_df["Picked"].tolist()
else:
    picked_names = []

# Remove already picked names from available pool
names = [n for n in names if n not in picked_names]

st.set_page_config(page_title="Gun Picker by RJ", page_icon="🎲", layout="wide")
st.markdown(
    """
    <h1 style='text-align: center;'>🙏🏻 ગુણ અમારા બનાવશોજી 🙏🏻</h1>
    """,
    unsafe_allow_html=True
)


# ---------------- Buttons ---------------- #
# ---------------- Buttons (Centered & Bigger) ---------------- #
col1, col2, col3 = st.columns([1, 3, 1])  # middle column wider

with col2:  # put both buttons inside the center column
    st.markdown(
        """
        <style>
        div.stButton > button {
            width: 100%;
            height: 70px;
            font-size: 24px;
            font-weight: bold;
            border-radius: 12px;
        }
        </style>
        """,
        unsafe_allow_html=True
    )

    pick_btn = st.button("🎲 Pick Name")
    reset_btn = st.button("🔄 Reset Game")

    if pick_btn:
        if not names:
            st.success("🎉 All names have been picked!")
        else:
            chosen = random.choice(names)
            picked_names.append(chosen)
            names.remove(chosen)

            # Save picked names
            pd.DataFrame({"Picked": picked_names}).to_csv(picked_file, index=False)

    if reset_btn:
        if os.path.exists(picked_file):
            os.remove(picked_file)
        picked_names = []
        names = df["Name"].tolist()
        st.warning("⚠️ Game has been reset! All names are available again.")


# ---------------- Function to generate random color ---------------- #
def random_color():
    r = random.randint(100, 255)
    g = random.randint(100, 255)
    b = random.randint(100, 255)
    return f'rgb({r},{g},{b})'

# ---------------- Display Last Picked Name (Centered & Big) ---------------- #
if picked_names:
    color = random_color()
    st.markdown(
        f"""
        <div style='text-align: center; margin: 40px 0;'>
            <h1 style='font-size: 80px; background-color: {color}; padding: 40px; border-radius: 15px;'>{picked_names[-1]}</h1>
        </div>
        """,
        unsafe_allow_html=True
    )
else:
    st.write("Click 'Pick Name' to start!")

# ---------------- Display Picked Names Horizontally (Bold & Bigger) ---------------- #
st.markdown("<h2 style='font-weight: bold;'>📋 Picked so far:</h2>", unsafe_allow_html=True)
if picked_names:
    max_per_line = 10
    for i in range(0, len(picked_names), max_per_line):
        line = picked_names[i:i+max_per_line]
        st.markdown(f"<p style='font-weight: bold; font-size: 20px;'>{' | '.join(line)}</p>", unsafe_allow_html=True)
else:
    st.info("No names picked yet.")
